package droid64.d64;

import org.junit.Assert;
import org.junit.Test;

public class BasicParserTest {

	private static final String BASICV2 = "10 PRINT\"\223\"\n" + "15 I=0\n" + "16 X=5\n" + "17 A=2*X*PI^2\n"
			+ "18 PRINT\"A=\",A\n" + "20 POKE53280,0:POKE53281,0\n" + "30 PRINT\"HELLO WORLD!  \";\n" + "35 I=I+1\n"
			+ "40 IFI<22THENGOTO30\n" + "100 DATA 1,2,3,4,5,6,7\n";

	private static final byte[] PRGV2 = { 0x01, 0x08, 0x0a, 0x08, 0x0a, 0x00, (byte) 0x99, 0x22, (byte) 0x93, 0x22, 0x00,
			0x12, 0x08, 0x0f, 0x00, 0x49, (byte) 0xb2, 0x30, 0x00, 0x1a, 0x08, 0x10, 0x00, 0x58, (byte) 0xb2, 0x35,
			0x00, 0x28, 0x08, 0x11, 0x00, 0x41, (byte) 0xb2, 0x32, (byte) 0xac, 0x58, (byte) 0xac, (byte) 0xff,
			(byte) 0xae, 0x32, 0x00, 0x34, 0x08, 0x12, 0x00, (byte) 0x99, 0x22, 0x41, 0x3d, 0x22, 0x2c, 0x41, 0x00,
			0x4a, 0x08, 0x14, 0x00, (byte) 0x97, 0x35, 0x33, 0x32, 0x38, 0x30, 0x2c, 0x30, 0x3a, (byte) 0x97, 0x35,
			0x33, 0x32, 0x38, 0x31, 0x2c, 0x30, 0x00, 0x61, 0x08, 0x1e, 0x00, (byte) 0x99, 0x22, 0x48, 0x45, 0x4c, 0x4c,
			0x4f, 0x20, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x21, 0x20, 0x20, 0x22, 0x3b, 0x00, 0x6b, 0x08, 0x23, 0x00, 0x49,
			(byte) 0xb2, 0x49, (byte) 0xaa, 0x31, 0x00, 0x79, 0x08, 0x28, 0x00, (byte) 0x8b, 0x49, (byte) 0xb3, 0x32,
			0x32, (byte) 0xa7, (byte) 0x89, 0x33, 0x30, 0x00, (byte) 0x8d, 0x08, 0x64, 0x00, (byte) 0x83, 0x20, 0x31,
			0x2c, 0x32, 0x2c, 0x33, 0x2c, 0x34, 0x2c, 0x35, (byte) 0x2c, 0x36, 0x2c, 0x37, 0x00, 0x00, 0x00 };

	private static final String BASICV7 = "10 A=0\n20 DO:PLAY \"CDE\":A=A+1\n30 LOOP WHILE A<3\n40 PRINT PEN(0)\n";
	private static final byte[] PRGV7 = {
			0x01, 0x1c, 0x09, 0x1c, 0x0a, 0x00, 0x41, (byte)0xb2, 0x30, 0x00, 0x1e, 0x1c, 0x14, 0x00, (byte)0xeb, 0x3a,
			(byte)0xfe, 0x04, 0x20, 0x22, 0x43, 0x44, 0x45, 0x22, 0x3a, 0x41, (byte)0xb2, 0x41, (byte)0xaa, 0x31, 0x00, 0x2a,
			0x1c, 0x1e, 0x00, (byte)0xec, 0x20, (byte)0xfd, 0x20, 0x41, (byte)0xb3, 0x33, 0x00, 0x36, 0x1c, 0x28, 0x00, (byte)0x99,
			0x20, (byte)0xce, 0x04, 0x28, 0x30, 0x29, 0x00, 0x00, 0x00
	};

	/** Null in, null out */
	@Test
	public void testParseCbmBasicPrgNull() {
		String basic = BasicParser.parseCbmBasicPrg(null);
		Assert.assertNull(basic);
	}

	/** Empty data in, null out */
	@Test
	public void testParseCbmBasicPrgEmpty() {
		String basic = BasicParser.parseCbmBasicPrg(new byte[0]);
		Assert.assertNull(basic);
	}

	/** Parse BASIC V2 */
	@Test
	public void testParseCbmBasicPrgV2() {
		String basic = BasicParser.parseCbmBasicPrg(PRGV2);
		Assert.assertEquals(BASICV2, basic);
	}

	/** Parse BASIC V7 */
	@Test
	public void testParseCbmBasicPrgV7() {
		String basic = BasicParser.parseCbmBasicPrg(PRGV7);
		Assert.assertEquals(BASICV7, basic);
	}

}
