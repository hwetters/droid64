package droid64.d64;

public class D80Constants {

	/** Array of CbmTrack (SecorCount, SectorOffset, ByteOffset)*/
	protected static final CbmTrack[] D80_TRACKS = {
			//  Sect SectorsIn Offset Track
			new CbmTrack( 29,    0, 0x000000),  // 0 (dummy)
			new CbmTrack( 29,    0, 0x000000),	// 1
			new CbmTrack( 29,   29, 0x001d00),	// 2
			new CbmTrack( 29,   58, 0x003a00),	// 3
			new CbmTrack( 29,   87, 0x005700),	// 4
			new CbmTrack( 29,  116, 0x007400),	// 5
			new CbmTrack( 29,  145, 0x009100),	// 6
			new CbmTrack( 29,  174, 0x00ae00),	// 7
			new CbmTrack( 29,  203, 0x00cb00),	// 8
			new CbmTrack( 29,  232, 0x00e800),	// 9
			new CbmTrack( 29,  261, 0x010500),	// 10
			new CbmTrack( 29,  290, 0x012200),	// 11
			new CbmTrack( 29,  319, 0x013f00),	// 12
			new CbmTrack( 29,  348, 0x015c00),	// 13
			new CbmTrack( 29,  377, 0x017900),	// 14
			new CbmTrack( 29,  406, 0x019600),	// 15
			new CbmTrack( 29,  435, 0x01b300),	// 16
			new CbmTrack( 29,  464, 0x01d000),	// 17
			new CbmTrack( 29,  493, 0x01ed00),	// 18
			new CbmTrack( 29,  522, 0x020a00),	// 19
			new CbmTrack( 29,  551, 0x022700),	// 20
			new CbmTrack( 29,  580, 0x024400),	// 21
			new CbmTrack( 29,  609, 0x026100),	// 22
			new CbmTrack( 29,  638, 0x027e00),	// 23
			new CbmTrack( 29,  667, 0x029b00),	// 24
			new CbmTrack( 29,  696, 0x02b800),	// 25
			new CbmTrack( 29,  725, 0x02d500),	// 26
			new CbmTrack( 29,  754, 0x02f200),	// 27
			new CbmTrack( 29,  783, 0x030f00),	// 28
			new CbmTrack( 29,  812, 0x032c00),	// 29
			new CbmTrack( 29,  841, 0x034900),	// 30
			new CbmTrack( 29,  870, 0x036600),	// 31
			new CbmTrack( 29,  899, 0x038300),	// 32
			new CbmTrack( 29,  928, 0x03a000),	// 33
			new CbmTrack( 29,  957, 0x03bd00),	// 34
			new CbmTrack( 29,  986, 0x03da00),	// 35
			new CbmTrack( 29, 1015, 0x03f700),	// 36
			new CbmTrack( 29, 1044, 0x041400),	// 37
			new CbmTrack( 29, 1073, 0x043100),	// 38
			new CbmTrack( 29, 1102, 0x044e00),	// 39
			new CbmTrack( 27, 1131, 0x046b00),	// 40
			new CbmTrack( 27, 1158, 0x048600),	// 41
			new CbmTrack( 27, 1185, 0x04a100),	// 42
			new CbmTrack( 27, 1212, 0x04bc00),	// 43
			new CbmTrack( 27, 1239, 0x04d700),	// 44
			new CbmTrack( 27, 1266, 0x04f200),	// 45
			new CbmTrack( 27, 1293, 0x050d00),	// 46
			new CbmTrack( 27, 1320, 0x052800),	// 47
			new CbmTrack( 27, 1347, 0x054300),	// 48
			new CbmTrack( 27, 1374, 0x055e00),	// 49
			new CbmTrack( 27, 1401, 0x057900),	// 50
			new CbmTrack( 27, 1428, 0x059400),	// 51
			new CbmTrack( 27, 1455, 0x05af00),	// 52
			new CbmTrack( 27, 1482, 0x05ca00),	// 53
			new CbmTrack( 25, 1509, 0x05e500),	// 54
			new CbmTrack( 25, 1534, 0x05fe00),	// 55
			new CbmTrack( 25, 1559, 0x061700),	// 56
			new CbmTrack( 25, 1584, 0x063000),	// 57
			new CbmTrack( 25, 1609, 0x064900),	// 58
			new CbmTrack( 25, 1634, 0x066200),	// 59
			new CbmTrack( 25, 1659, 0x067b00),	// 60
			new CbmTrack( 25, 1684, 0x069400),	// 61
			new CbmTrack( 25, 1709, 0x06ad00),	// 62
			new CbmTrack( 25, 1734, 0x06c600),	// 63
			new CbmTrack( 25, 1759, 0x06df00),	// 64
			new CbmTrack( 23, 1784, 0x06f800),	// 65
			new CbmTrack( 23, 1807, 0x070f00),	// 66
			new CbmTrack( 23, 1830, 0x072600),	// 67
			new CbmTrack( 23, 1853, 0x073d00),	// 68
			new CbmTrack( 23, 1876, 0x075400),	// 69
			new CbmTrack( 23, 1899, 0x076b00),	// 70
			new CbmTrack( 23, 1922, 0x078200),	// 71
			new CbmTrack( 23, 1945, 0x079900),	// 72
			new CbmTrack( 23, 1968, 0x07b000),	// 73
			new CbmTrack( 23, 1991, 0x07c700),	// 74
			new CbmTrack( 23, 2014, 0x07de00),	// 75
			new CbmTrack( 23, 2037, 0x07f500),	// 76
			new CbmTrack( 23, 2060, 0x080c00),	// 77
	};

	/** block 38/0 */
	protected static final short[] NEWD80DATA = {
			0x26, 0x03, 0x43, 0x00, 0x01, 0x33, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f,  // 43100
			0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d,  // 43110
			0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff,  // 43120
			0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff,  // 43130
			0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff,  // 43140
			0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f,  // 43150
			0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d,  // 43160
			0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff,  // 43170
			0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff,  // 43180
			0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff,  // 43190
			0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f,  // 431a0
			0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x1b,  // 431b0
			0xf6, 0xff, 0xff, 0x1f, 0x1b, 0xfc, 0xff, 0xff, 0x1f, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff,  // 431c0
			0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff,  // 431d0
			0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff,  // 431e0
			0x07, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x07   // 431f0
	};

	// 38/3
	protected static final short[] NEWD80DATA_2 = {
			0x27, 0x01, 0x43, 0x00, 0x33, 0x4e, 0x1b, 0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x07 ,  // 43400
			0x1b, 0xff, 0xff, 0xff, 0x07, 0x19, 0xff, 0xff, 0xff, 0x01, 0x19, 0xff, 0xff, 0xff, 0x01, 0x19 ,  // 43410
			0xff, 0xff, 0xff, 0x01, 0x19, 0xff, 0xff, 0xff, 0x01, 0x19, 0xff, 0xff, 0xff, 0x01, 0x19, 0xff ,  // 43420
			0xff, 0xff, 0x01, 0x19, 0xff, 0xff, 0xff, 0x01, 0x19, 0xff, 0xff, 0xff, 0x01, 0x19, 0xff, 0xff ,  // 43430
			0xff, 0x01, 0x19, 0xff, 0xff, 0xff, 0x01, 0x19, 0xff, 0xff, 0xff, 0x01, 0x17, 0xff, 0xff, 0x7f ,  // 43440
			0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00 ,  // 43450
			0x17, 0xff, 0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x17 ,  // 43460
			0xff, 0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x17, 0xff ,  // 43470
			0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x17, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00 ,  // 43480
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,  // 43490
	};

	/** Directory track sector sequence */
	protected static final int[]  DIR_SECTORS = {
			1, 4, 7, 10, 13, 16, 19, 22, 25, 28,
			2, 5, 8, 11, 14, 17, 20, 23, 26,
			3, 6, 9, 12, 15, 18, 21, 24, 27 };

	private D80Constants() {
		// Not used
	}

}
