package droid64.d64;

public class D64Constants {

	/** Directory track sector sequence */
	protected static final int[]  DIR_SECTORS = {
			1, 4, 7, 10, 13, 16,
			2, 5, 8, 11, 14, 17,
			3, 6, 9, 12, 15, 18 };

	/** Offsets of D64 tracks */
	protected static final CbmTrack[] D64_TRACKS = {
			new CbmTrack(21,	  0,	      0	),	// $00000}   0 dummy
			// sectors_, sectors_in_, offset_
			new CbmTrack(21,	  0,	      0	),	// $00000}   1
			new CbmTrack(21,	 21,	   5376	),	// $01500}   2
			new CbmTrack(21,	 42,	  10752	),	// $02a00}   3
			new CbmTrack(21,	 63,	  16128	),	// $03f00}   4
			new CbmTrack(21,	 84,	  21504	),	// $05400}   5
			new CbmTrack(21,	105,	  26880	),	// $06900}   6
			new CbmTrack(21,	126,	  32256	),	// $07e00}   7
			new CbmTrack(21,	147,	  37632	),	// $09300}   8
			new CbmTrack(21,	168,	  43008	),	// $0a800}   9
			new CbmTrack(21,	189,	  48384	),	// $0bd00}  10
			new CbmTrack(21,	210,	  53760	),	// $0d200}  11
			new CbmTrack(21,	231,	  59136	),	// $0e700}  12
			new CbmTrack(21,	252,	  64512	),	// $0fc00}  13
			new CbmTrack(21,	273,	  69888	),	// $11100}  14
			new CbmTrack(21,	294,	  75264	),	// $12600}  15
			new CbmTrack(21,	315,	  80640	),	// $13b00}  16
			new CbmTrack(21,	336,	  86016	),	// $15000}  17
			new CbmTrack(19,	357,	  91392	),	// $16500}  18
			new CbmTrack(19,	376,	  96256	),	// $17800}  19
			new CbmTrack(19,	395,	 101120	),	// $18b00}  20
			new CbmTrack(19,	414,	 105984	),	// $19e00}  21
			new CbmTrack(19,	433,	 110848	),	// $1b100}  22
			new CbmTrack(19,	452,	 115712	),	// $1c400}  23
			new CbmTrack(19,	471,	 120576	),	// $1d700}  24
			new CbmTrack(18,	490,	 125440	),	// $1ea00}  25
			new CbmTrack(18,	508,	 130048	),	// $1fc00}  26
			new CbmTrack(18,	526,	 134656	),	// $20e00}  27
			new CbmTrack(18,	544,	 139264	),	// $22000}  28
			new CbmTrack(18,	562,	 143872	),	// $23200}  29
			new CbmTrack(18,	580,	 148480	),	// $24400}  30
			new CbmTrack(17,	598,	 153088	),	// $25600}  31
			new CbmTrack(17,	615,	 157440	),	// $26700}  32
			new CbmTrack(17,	632,	 161792	),	// $27800}  33
			new CbmTrack(17,	649,	 166144	),	// $28900}  34
			new CbmTrack(17,	666,	 170496	),	// $29a00}  35
			new CbmTrack(17,	683,	 174848	),	// $2ab00}  36
			new CbmTrack(17,	700,	 179200	),	// $2bc00}  37
			new CbmTrack(17,	717,	 183552	),	// $2cd00}  38
			new CbmTrack(17,	734,	 187904	),	// $2de00}  39
			new CbmTrack(17,	751,	 192256	),	// $2ef00}  40
	};

	protected static final short[] NEWD64DATA = {
			0x12, 0x01, 0x41, 0x00, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f,	//00016500 (dec = 91392)
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f,	//00016510
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f,	//00016520
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f,	//00016530
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x11, 0xfc, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07,	//00016540
			0x13, 0xff, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07,	//00016550
			0x13, 0xff, 0xff, 0x07, 0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03,	//00016560
			0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03, 0x11, 0xff, 0xff, 0x01,	//00016570
			0x11, 0xff, 0xff, 0x01, 0x11, 0xff, 0xff, 0x01, 0x11, 0xff, 0xff, 0x01, 0x11, 0xff, 0xff, 0x01,	//00016580
			0x31, 0x32, 0x33, 0x34, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0,	//00016590
			0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00,	//000165a0
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	//000165b0
			0x00, 0x00, 0x00, 0x00, 0x00 ,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	//000165c0
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	//000165d0
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	//000165e0
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	//000165f0
			0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00	//00016600
	};

	/** Table for finding track/sector of CP/M allocation unit */
	protected static final int[][] CPM_ZONES = {
			// FirstTrack, SectorsPerTrack, SectorsInZone, ReservedZoneSectors
			{ 1, 21, 357, 2},
			{18, 19, 133, 1},
			{25, 18, 108, 0},
			{31, 17,  85, 0}
	};

	protected static final int C128_SS_DIR_TRACK = 1;
	protected static final int C64_SS_DIR_TRACK = 3;
	protected static final int[] C128_SS_DIR_SECTORS = { 10, 15, 20, 4, 9, 14, 19, 3 };
	protected static final int[] C64_SS_DIR_SECTORS = { 1, 2, 3, 4, 5, 6 ,7 };

	private D64Constants() {
		// unused
	}
}
