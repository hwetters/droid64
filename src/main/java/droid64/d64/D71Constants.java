package droid64.d64;

public class D71Constants {

	/** Table for finding track/sector of CP/M allocation unit */
	protected static final int[][] CPM_ZONES = {
			// FirstTrack, SectorsPerTrack, SectorsInZone, ReservedZoneSectors
			{ 1, 21, 357, 2},
			{18, 19, 133, 1},
			{25, 18, 108, 0},
			{31, 17,  85, 0}
	};
	/** CP/M D71 Directory track */
	protected static final int C128_DS_DIR_TRACK = 1;
	/** CP/M D71 directory sectors */
	protected static final int[] C128_DS_DIR_SECTORS = { 10, 15, 20, 4, 9, 14, 19, 3, 8, 13, 18, 2, 7, 12, 17, 1 };

	/** Array of CbmTrack (SecorCount, SectorOffset, ByteOffset)*/
	protected static final CbmTrack[] D71_TRACKS = {
			//Sect SectorsIn Offset Track
			new CbmTrack( 21,    0, 0x00000 ),   //  0 (dummy)
			new CbmTrack( 21,    0, 0x00000 ),   //  1
			new CbmTrack( 21,   21, 0x01500 ),   //  2
			new CbmTrack( 21,   42, 0x02a00 ),   //  3
			new CbmTrack( 21,   63, 0x03f00 ),   //  4
			new CbmTrack( 21,   84, 0x05400 ),   //  5
			new CbmTrack( 21,  105, 0x06900 ),   //  6
			new CbmTrack( 21,  126, 0x07e00 ),   //  7
			new CbmTrack( 21,  147, 0x09300 ),   //  8
			new CbmTrack( 21,  168, 0x0a800 ),   //  9
			new CbmTrack( 21,  189, 0x0bd00 ),   // 10
			new CbmTrack( 21,  210, 0x0d200 ),   // 11
			new CbmTrack( 21,  231, 0x0e700 ),   // 12
			new CbmTrack( 21,  252, 0x0fc00 ),   // 13
			new CbmTrack( 21,  273, 0x11100 ),   // 14
			new CbmTrack( 21,  294, 0x12600 ),   // 15
			new CbmTrack( 21,  315, 0x13b00 ),   // 16
			new CbmTrack( 21,  336, 0x15000 ),   // 17
			new CbmTrack( 19,  357, 0x16500 ),   // 18
			new CbmTrack( 19,  376, 0x17800 ),   // 19
			new CbmTrack( 19,  395, 0x18b00 ),   // 20
			new CbmTrack( 19,  414, 0x19e00 ),   // 21
			new CbmTrack( 19,  433, 0x1b100 ),   // 22
			new CbmTrack( 19,  452, 0x1c400 ),   // 23
			new CbmTrack( 19,  471, 0x1d700 ),   // 24
			new CbmTrack( 18,  490, 0x1ea00 ),   // 25
			new CbmTrack( 18,  508, 0x1fc00 ),   // 26
			new CbmTrack( 18,  526, 0x20e00 ),   // 27
			new CbmTrack( 18,  544, 0x22000 ),   // 28
			new CbmTrack( 18,  562, 0x23200 ),   // 29
			new CbmTrack( 18,  580, 0x24400 ),   // 30
			new CbmTrack( 17,  598, 0x25600 ),   // 31
			new CbmTrack( 17,  615, 0x26700 ),   // 32
			new CbmTrack( 17,  632, 0x27800 ),   // 33
			new CbmTrack( 17,  649, 0x28900 ),   // 34
			new CbmTrack( 17,  666, 0x29a00 ),   // 35
			new CbmTrack( 21,  683, 0x2ab00 ),   // 36
			new CbmTrack( 21,  704, 0x2c000 ),   // 37
			new CbmTrack( 21,  725, 0x2d500 ),   // 38
			new CbmTrack( 21,  746, 0x2ea00 ),   // 39
			new CbmTrack( 21,  767, 0x2ff00 ),   // 40
			new CbmTrack( 21,  788, 0x31400 ),   // 41
			new CbmTrack( 21,  809, 0x32900 ),   // 42
			new CbmTrack( 21,  830, 0x33e00 ),   // 43
			new CbmTrack( 21,  851, 0x35300 ),   // 44
			new CbmTrack( 21,  872, 0x36800 ),   // 45
			new CbmTrack( 21,  893, 0x37d00 ),   // 46
			new CbmTrack( 21,  914, 0x39200 ),   // 47
			new CbmTrack( 21,  935, 0x3a700 ),   // 48
			new CbmTrack( 21,  956, 0x3bc00 ),   // 49
			new CbmTrack( 21,  977, 0x3d100 ),   // 50
			new CbmTrack( 21,  998, 0x3e600 ),   // 51
			new CbmTrack( 21, 1019, 0x3fb00 ),   // 52
			new CbmTrack( 19, 1040, 0x41000 ),   // 53
			new CbmTrack( 19, 1059, 0x42300 ),   // 54
			new CbmTrack( 19, 1078, 0x43600 ),   // 55
			new CbmTrack( 19, 1097, 0x44900 ),   // 56
			new CbmTrack( 19, 1116, 0x45c00 ),   // 57
			new CbmTrack( 19, 1135, 0x46f00 ),   // 58
			new CbmTrack( 19, 1154, 0x48200 ),   // 59
			new CbmTrack( 18, 1173, 0x49500 ),   // 60
			new CbmTrack( 18, 1191, 0x4a700 ),   // 61
			new CbmTrack( 18, 1209, 0x4b900 ),   // 62
			new CbmTrack( 18, 1227, 0x4cb00 ),   // 63
			new CbmTrack( 18, 1245, 0x4dd00 ),   // 64
			new CbmTrack( 18, 1263, 0x4ef00 ),   // 65
			new CbmTrack( 17, 1281, 0x50100 ),   // 66
			new CbmTrack( 17, 1298, 0x51200 ),   // 67
			new CbmTrack( 17, 1315, 0x52300 ),   // 68
			new CbmTrack( 17, 1332, 0x53400 ),   // 69
			new CbmTrack( 17, 1349, 0x54500 ),   // 70
	};

	protected static final short[] NEWD71BAM1DATA = { /* block 18/0 */
			0x12, 0x01, 0x41, 0x80, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, //00016500
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, //00016510
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, //00016520
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, //00016530
			0x15, 0xff, 0xff, 0x1f, 0x15, 0xff, 0xff, 0x1f, 0x11, 0xfc, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07, //00016540
			0x13, 0xff, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07, 0x13, 0xff, 0xff, 0x07, //00016550
			0x13, 0xff, 0xff, 0x07, 0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03, //00016560
			0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03, 0x12, 0xff, 0xff, 0x03, 0x11, 0xff, 0xff, 0x01, //00016570
			0x11, 0xff, 0xff, 0x01, 0x11, 0xff, 0xff, 0x01, 0x11, 0xff, 0xff, 0x01, 0x11, 0xff, 0xff, 0x01, //00016580
			0x31, 0x32, 0x33, 0x34, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, //00016590
			0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, //000165a0
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //000165b0
			0x00, 0x00, 0x00, 0x00, 0x00 ,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //000165c0
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x15, //000165d0
			0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x00, 0x13, //000165e0
			0x13, 0x13, 0x13, 0x13, 0x13, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x11, 0x11, 0x11, 0x11, 0x11, //000165f0
			0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  //00016600
	};
	protected static final short[] NEWD71BAM2DATA = { /* block 53/0 */
			0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff,   //00041000
			0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff,   //00041010
			0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x1f,   //00041020
			0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x07, 0xff, 0xff, 0x07, 0xff, 0xff, 0x07, 0xff,   //00041030
			0xff, 0x07, 0xff, 0xff, 0x07, 0xff, 0xff, 0x07, 0xff, 0xff, 0x03, 0xff, 0xff, 0x03, 0xff, 0xff,   //00041040
			0x03, 0xff, 0xff, 0x03, 0xff, 0xff, 0x03, 0xff, 0xff, 0x03, 0xff, 0xff, 0x01, 0xff, 0xff, 0x01,   //00041050
			0xff, 0xff, 0x01, 0xff, 0xff, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   //00041060
	};

	private D71Constants() {
		// Not usedb
	}

}
